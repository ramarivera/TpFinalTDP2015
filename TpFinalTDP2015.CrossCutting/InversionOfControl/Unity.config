<?xml version="1.0" encoding="utf-8"?>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

  <alias alias="IUnity"
        type="Microsoft.Practices.Unity.IUnityContainer,
        Microsoft.Practices.Unity" />

  <alias alias="IPersFactory" type="MarrSystems.TpFinalTDP2015.Persistence.IPersistenceFactory,
         MarrSystems.TpFinalTDP2015.Persistence" />

  <alias alias="EFPersFactory" type="MarrSystems.TpFinalTDP2015.Persistence.EntityFramework.EFPersistenceFactory,
         MarrSystems.TpFinalTDP2015.Persistence.EntityFramework" />

  <alias alias="ICnxtFactory" type="MarrSystems.TpFinalTDP2015.Persistence.EntityFramework.IDbContextFactory,
         MarrSystems.TpFinalTDP2015.Persistence.EntityFramework" />

  <alias alias="EFCnxtFactory" type="MarrSystems.TpFinalTDP2015.Persistence.EntityFramework.DigitalSignageDbContextFactory,
         MarrSystems.TpFinalTDP2015.Persistence.EntityFramework" />

  <alias alias="IServFactory" type="MarrSystems.TpFinalTDP2015.BusinessLogic.Services.IServiceFactory,
        MarrSystems.TpFinalTDP2015.BusinessLogic"/>

  <alias alias="ServFactory" type="MarrSystems.TpFinalTDP2015.BusinessLogic.Services.ServiceFactory,
        MarrSystems.TpFinalTDP2015.BusinessLogic"/>

  <alias alias="IContFactory" type="MarrSystems.TpFinalTDP2015.BusinessLogic.UseCaseControllers.IControllerFactory,
        MarrSystems.TpFinalTDP2015.BusinessLogic"/>

  <alias alias="ContFactory" type="MarrSystems.TpFinalTDP2015.BusinessLogic.UseCaseControllers.ControllerFactory,
        MarrSystems.TpFinalTDP2015.BusinessLogic"/>

  <alias alias="IPageFactory" type="MarrSystems.TpFinalTDP2015.UI.AdminModePages.IAdminModePageFactory,
         MarrSystems.TpFinalTDP2015.UI.Winforms" />

  <alias alias="PageFactory" type="MarrSystems.TpFinalTDP2015.UI.AdminModePages.AdminModePageFactory,
         MarrSystems.TpFinalTDP2015.UI.Winforms" />

  <alias alias="IRss" type="MarrSystems.TpFinalTDP2015.BusinessLogic.RSS.IRssReader,
         MarrSystems.TpFinalTDP2015.BusinessLogic"/>
  <alias alias="RawRSS" type="MarrSystems.TpFinalTDP2015.BusinessLogic.RSS.RawXmlRssReader,
         MarrSystems.TpFinalTDP2015.BusinessLogic"/>
  <alias alias="SyndicationRSS" type="MarrSystems.TpFinalTDP2015.BusinessLogic.RSS.SyndicationRssReader,
         MarrSystems.TpFinalTDP2015.BusinessLogic"/>

  <alias alias="EFDigSignCnxt" type="MarrSystems.TpFinalTDP2015.Persistence.EntityFramework.DigitalSignageContext,
         MarrSystems.TpFinalTDP2015.Persistence.EntityFramework" />
  <alias alias="IDbCnxt" type="MarrSystems.TpFinalTDP2015.Persistence.EntityFramework.IDbContext,
         MarrSystems.TpFinalTDP2015.Persistence.EntityFramework" />

  <alias alias="ISchChk" type="MarrSystems.TpFinalTDP2015.Model.DomainServices.IScheduleChecker,
         MarrSystems.TpFinalTDP2015.Model"/>
  <alias alias="SchChk" type="MarrSystems.TpFinalTDP2015.Model.DomainServices.ScheduleChecker,
         MarrSystems.TpFinalTDP2015.Model"/>

  
  <sectionExtension
       type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,  
             Microsoft.Practices.Unity.Interception.Configuration" />


  <container name="Registrations">
    <!--<container>
<register type="ICnxtFactory" mapTo="EFCnxtFactory" name="IDbContextFactory">
      <lifetime type="PerResolveLifetimeManager" />
    </register>

    <register type="EFCnxtFactory" mapTo="EFCnxtFactory">
      <constructor>
        <param name="pConectionStringName" type="System.String" value="DigitalSignage"/>
      </constructor>
    </register>

    <register type="IPersFactory" mapTo="EFPersFactory" name="IPersistenceFactory">
      <lifetime type="PerResolveLifetimeManager" />
    </register>

    <register type="EFPersFactory" name="EFPersistenceFactory">
            <lifetime type="PerResolveLifetimeManager" />
      <constructor>
        <param name="pFactory">
          <dependency type="ICnxtFactory" />
        </param>
      </constructor>
    </register>

    <register type="IContFactory" mapTo="ContFactory" name="IControllerFactory">
      <lifetime type="PerResolveLifetimeManager" />
    </register>

    <register type="ContFactory" name="ControllerFactory" >
      <constructor>
        <param name="pContainer">
          <dependency type="IUnity" />
        </param>
        <param name="pUowFact" dependencyName="IPersistenceFactory" dependencyType="IPersFactory">
       </param>
        <param name="pServFact">
          <dependency name="IServiceFactory"  />
        </param>
      </constructor>
    </register>

    <register type="IServFactory" mapTo="ServFactory" name="IServiceFactory">
      <lifetime type="PerResolveLifetimeManager" />
    </register>

    <register type="ServFactory" name="ServiceFactory">
      <constructor>
        <param name="pContainer">
          <dependency type="IUnity" />
        </param>
        <param name="pFactory">
          <dependency name="IPersistenceFactory" />
        </param>
      </constructor >
    </register>


    <register type="IRss" mapTo="RawRSS" name="RawXmlRssReader">
      <lifetime type="PerResolveLifetimeManager" />
      <constructor />
    </register>

    <register type="ISchChk" mapTo="SchChk" name="IScheduleChecker">
      <lifetime type="PerResolveLifetimeManager" />
      <constructor />
    </register>

  </container>-->
    <extension type="Interception"/>
    
    <register type="ICnxtFactory" mapTo="EFCnxtFactory">
      <interceptor type="InterfaceInterceptor" />
      <interceptionBehavior type="PolicyInjectionBehavior"/>
      <lifetime type="PerResolveLifetimeManager" />
    </register>

    <register type="EFCnxtFactory">
      <lifetime type="PerResolveLifetimeManager" />
      <constructor>
        <param name="pConectionStringName" type="System.String" value="DigitalSignageLocalDB"/>
      </constructor>
    </register>

    <register type="IPersFactory" mapTo="EFPersFactory" name="IPersistenceFactory">
      <interceptor type="InterfaceInterceptor" />
      <interceptionBehavior type="PolicyInjectionBehavior"/>
    </register>

    <register type="EFPersFactory">
      <constructor>
        <param name="pFactory">
          <dependency type="ICnxtFactory" />
        </param>
      </constructor>
    </register>

    <register type="IContFactory" mapTo="ContFactory">
      <interceptor type="InterfaceInterceptor" />
      <interceptionBehavior type="PolicyInjectionBehavior"/>
      <lifetime type="PerResolveLifetimeManager" />
    </register>

    <register type="ContFactory">
      <lifetime type="PerResolveLifetimeManager" />
      <constructor>
        <param name="pContainer">
          <dependency type="IUnity" />
        </param>
        <param name="pUowFact" dependencyType="IPersFactory">
        </param>
      </constructor>
    </register>

    <register type="IServFactory" mapTo="ServFactory" >
      <interceptor type="InterfaceInterceptor" />
      <interceptionBehavior type="PolicyInjectionBehavior"/>
      <lifetime type="PerResolveLifetimeManager" />
    </register>

    <register type="ServFactory" >
      <lifetime type="PerResolveLifetimeManager" />

      <constructor>
        <param name="pContainer">
          <dependency type="IUnity" />
        </param>
        <param name="pFactory">
          <dependency type="IPersFactory" />
        </param>
      </constructor >
    </register>


    <register type="IRss" mapTo="RawRSS">
      <lifetime type="PerResolveLifetimeManager" />
      <constructor />
    </register>

    <register type="ISchChk" mapTo="SchChk">
      <lifetime type="PerResolveLifetimeManager" />
      <constructor />
    </register>

  </container>
</unity>